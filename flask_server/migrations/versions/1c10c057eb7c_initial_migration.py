"""Initial migration

Revision ID: 1c10c057eb7c
Revises: 
Create Date: 2025-01-14 13:01:41.846011

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1c10c057eb7c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tracker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('target_quantity', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['part.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'part_id', 'recipe_id', name='unique_user_part_recipe')
    )
    with op.batch_alter_table('alternate_recipe', schema=None) as batch_op:
        batch_op.alter_column('selected',
               existing_type=mysql.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=True,
               existing_server_default=sa.text("'0'"))

    with op.batch_alter_table('data_validation', schema=None) as batch_op:
        batch_op.alter_column('table_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('column_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('value',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('miner_supply', schema=None) as batch_op:
        batch_op.alter_column('base_supply_pm',
               existing_type=mysql.FLOAT(),
               nullable=True)

    with op.batch_alter_table('miner_type', schema=None) as batch_op:
        batch_op.alter_column('miner_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('node_purity', schema=None) as batch_op:
        batch_op.alter_column('node_purity',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('part', schema=None) as batch_op:
        batch_op.alter_column('part_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('category',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('power_shards', schema=None) as batch_op:
        batch_op.alter_column('output_increase',
               existing_type=mysql.FLOAT(),
               nullable=True)

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.alter_column('recipe_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('base_production_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('produced_in_automated',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('produced_in_manual',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('base_input',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('byproduct',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.drop_column('base_demand')
        batch_op.drop_column('byproduct_supply')
        batch_op.drop_column('base_supply')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.add_column(sa.Column('base_supply', mysql.FLOAT(), server_default=sa.text("'0'"), nullable=True))
        batch_op.add_column(sa.Column('byproduct_supply', mysql.FLOAT(), server_default=sa.text("'0'"), nullable=True))
        batch_op.add_column(sa.Column('base_demand', mysql.FLOAT(), server_default=sa.text("'0'"), nullable=True))
        batch_op.alter_column('byproduct',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('base_input',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('produced_in_manual',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('produced_in_automated',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('base_production_type',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('recipe_name',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('power_shards', schema=None) as batch_op:
        batch_op.alter_column('output_increase',
               existing_type=mysql.FLOAT(),
               nullable=False)

    with op.batch_alter_table('part', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('part_name',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('node_purity', schema=None) as batch_op:
        batch_op.alter_column('node_purity',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('miner_type', schema=None) as batch_op:
        batch_op.alter_column('miner_type',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('miner_supply', schema=None) as batch_op:
        batch_op.alter_column('base_supply_pm',
               existing_type=mysql.FLOAT(),
               nullable=False)

    with op.batch_alter_table('data_validation', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('value',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('column_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('table_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('alternate_recipe', schema=None) as batch_op:
        batch_op.alter_column('selected',
               existing_type=sa.Boolean(),
               type_=mysql.INTEGER(),
               existing_nullable=True,
               existing_server_default=sa.text("'0'"))

    op.drop_table('tracker')
    # ### end Alembic commands ###
